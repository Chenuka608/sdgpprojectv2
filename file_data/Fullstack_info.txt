Abstract—This is a concise study of the evolution of the full stack development due to advancement of technology and the introduction of cloud. It helps give you a better understanding of what full stack development was and how full stack development evolved, it shows a take on the fact that full stack development is not dead and has just evolved to better accommodate the user's needs. A.KeywordsFull Stack Development, Cloud Computing, Networking Model,Full Stack Developer, Front-end Development, Back-end Development, Stack, Cloud, API, Development B.Abbreviations and AcronymsGraphical User Interface(GUI), Hypertext Markup Language(HTML),Cascading Style Sheets (CSS), Syntactically Awesome Style Sheet (SASS), Application Program Interface (API), Personal Home Page(PHP), Representational State Transfer (REST), Transmission Control Protocol/Internet Protocol (TCP/IP), Hypertext Transfer Protocol (HTTP), Open System’s Interconnection (OSI), Linux, Apache, MySQL, PHP (LAMP), Windows, Apache, MySQL, PHP (WAMP), Cross Platform, Apache, MariaDB, PHP, Pearl (XAMPP), International Organization for Standardization (ISO), Hypertext Transfer Protocol Secure (HTTPS), Transmission Control Protocol (TCP), User Datagram Protocol (UDP), Address Resolution Protocol (ARP), Media Access Control (MAC), Logical Link Control (LLC) , Operating System (OS), File Transfer Protocol (FTP), Structured Query Language (SQL), Damn Vulnerable Web Application (DVWA) , Asynchronous Java Script and XML (AJAX), Extensible Markup Language (XML), Domain Naming System (DNS), Software as a service (SaaS), Platform as a Service (PaaS), Infrastructure as a service (IaaS), Internet Protocol (IP), Virtual Local Area Network (VLAN), Uniform Resource Locator (URL), Client Uniform Resource Locator (cURL), Java Script Object Notation (JSON), User Interface (UI), Development and Operation (DevOps), Relational Database Management System (RDBMS), Continuous Integration (CI), Continuous Delivery (CD) I.INTRODUCTIONFull stack development is a part of web development which broadly refers to the tasks associated with developing websites for hosting via intranet or internet. It is the development of a complete application both the front end, which we refer to as the client-side, and back-end the server-side. Due to the introduction of cloud computing there have been drastic changes in the field of Full Stack Development and how it has affected the development. Cloud Computing consists of various services and has many advantages. II.WEB DEVELOPMENTWeb Development is the process of building websites for the internet or for a private network which is also known as the Intranet. The web development process includes web design, web content development, client-side/server-side scripting and network security configuration, among other tasks. It could involve the development of static webpages to various applications for a website. A.Front-end DevelopmentFront-end development is how design gets implemented onthe web. The pages of a website are a sum of layers—structure, data, design, content, and functionality. In other words, Front-end is the part of the website where users can see and interact with the graphical user interface (GUI) and the command line which includes the design, navigation menus, texts, images, videos, etc. Some of the Front-end Languages include HTML, CSS, JavaScript, etc. and some of the Front-end Frameworks and Libraries include AngularJS, React.js, jQuery, SASS, etc. [1] B.Back-end DevelopmentBack-end Development refers to server-side development.It is the term used for the behind-the-scenes activities that occur when performing any action on a website. In other words, it is the portion of software that does not come in direct contact with the users. Users indirectly access the parts developed by Back-end designers through a Front-end application. Activities, like writing APIs, creating libraries and working with system components without user interfaces are some examples of Back-end development. Some of the Back-end Languages include PHP, Java, C++, Python, JavaScript, Node.js, etc., And some of the Back-end Frameworks include Express, Django, Rails, Laravel, Spring, etc. Some more commonly Back-end program/scripting languages are C\#, Ruby, REST, GO etc. [2] III.NETWORKING MODELSNetworking models are communication models and it is necessary to understand the construction and architecture of these models. They establish a connection between the sender and the receiver that helps in transmission of data. When the protocols and the functions are competent communication occurs. In networking models, we refer to the individual pieces of the assembly as layers and the collection as a stack. A.Protocol ModelThis model closely matches the structure of a particularprotocol suite. A protocol suite includes the set of related protocols that typically provide all the functionality required for people to communicate with the data network. The TCP/IP model is a protocol model because it describes the functions that occur at each layer of protocols within the TCP/IP suite. B.Reference ModelThis type of model describes the functions that must becompleted at a particular layer but does not specify precisely how a function should be accomplished. A reference model is not intended to provide a sufficient level of detail to define precisely how each protocol should work at each layer. The primary purpose of a reference model is to aid in a clearer understanding of the functions and processes necessary for network communications. C.TCP/IP ModelThe first layered model for communications within anetwork was created in the early 1970s and is referred to as the Internet model. The TCP/IP model describes a set of general design guidelines and implementations of specific networking protocols to enable computers to communicate over a network. TCP/IP provides end-to-end connectivity specifying how data should be formatted, addressed, transmitted, routed and received at the destination. [3] 1)Layers of TCP/IP modeli.Application Layer: Represents datato the user, plus encoding anddialogue control.ii.Transport Layer: Supportscommunication between acrossdiverse networks.iii.Internet: Determines the best paththrough the network.iv.Network Access: Controls thehardware devices and media thatmake up the network.D.OSI Network ModelThe OSI model is a conceptual model which has beendeveloped by ISO, in the year 1984.It aids in understanding what is occurring within a networking system; in this system, data is transferred to and fro within adjacent layers. The OSI Model consists of 7 Layers, and they are typically described from the top layer down. OSI stands for Open Systems Interconnection. The OSI Model consists of 7 Layers, and they are typically described from the top layer down. It aids in understanding what is occurring within a networking system; in this system, data is transferred to and fro within adjacent layers. [4] ?7 - Application Layer: This This layer provides thenetworking protocols to the end-user like HTTP andHTTPS.?6 - Presentation Layer: Converts data from one form toanother and evaluates the syntax.?5 - Selection Layer: Responsible for connection, re-connection, and authentication.?4 - Transport Layer: Transmission of data to differentnetwork connections speed, amount, etc. Implementedusing TCP and UDP.*3 - Network Layer: Routes the data, sends it to thecorrect destination by checking each piece of data, alsomaps the destination address to the physical addressachieved by the ARP.?2 - Data Link Layer: It is Complex and Checks for faultsin transmission from the physical layer and thenconverts the data into data frames, which is of 4 parts.Physical addressing occurs constitutes of MAC andLLC.?1 - Physical Layer: This layer usually consists ofnetwork cables, ports, repeaters, transmitters, etc. Heredigital data bits are either received or transferred by therespective physical layer devices. It can be of the formmechanical, electrical or radio.E.Differences between TCP/IP and OSI Network ModelOSI follows a vertical approach, whereas TCP/IP followsa horizontal approach. In the OSI model, the transport layer, is only connection-oriented, whereas in the TCP/IP model it is both connection-oriented and connectionless. IV.WEB STACKA web stack, also called a web application stack, is a compilation of a software setup especially for implementing websites and web applications. The collection of layers is known as a stack. The term, 'stack', refers to the fact that the system's components are built upon one another. The basic requirements necessary to construct a web stack include an operating system, a web server, a database, and a script interpreter. Together with the proper server hardware, this bundle of components ensures that necessary information about similar web projects is forwarded to requesting clients which is generally the internet browser. [5] A.A few types of Web StacksA LAMP Stack is one of the examples of a web stack, it isa set of open-source software that can be used to create websites and web applications. The LAMP stack was the first followed by various other stacks. Due to the steadily increasing progress of this technology and the development of new freeware, different variations of LAMP stacks have arisen. Some famous examples include: 1.WAMP (Windows as an operating system)2.MAMP (Mac OS X as an operating system)3.XAMPP (any operating system, Perl and PHP asscript interpreters; platform-independent FTPserver)XAMPP is the most commonly used web stack. Linux supported a MySQL database and has now shifted to MariaDB, which does not support SQL Injection attacks via DVWA. V.THE NEWERA OFWEB 2.0A.Before the new eraInitially companies usually preferred a full-stack developerand not specialist. A full-stack developer is the one who is both fluent in Front-end and Back-end development. A specialization would mean the person is either impeccable in developing the Front-end or the Back-end. Companies usually went for full-stack development, but the time taken by the specialists would be lesser than that of a team consisting of only full-stack developers. To back this statement up let us consider the productivity to be 1 unit for one instance of time for a Full Stack Developer now consider the total productivity required is four units, then it would require four instances of time. Whereas for a specialist, let us consider two units of productivity per instance then to reach four units, it would take a less amount of time and hence is more efficient. In case any discrepancies occur while the connection of the Back-end to the front you could add another instance which would still be faster. Therefore, the efficiency, ?, and approximate the time taken to finish the project, Tp are defined by the following models (Equation 5.1 & Equation 5.2). in which P is productivity per unit time, L is the minimum productivity units to be reached, and D is the number of discrepancies (if any). The productivity per unit time can be calculated using the Labor Productivity Formula (Equation 5.3). [6] in which To is Total Output and Ti is Total Input. B.After the new eraDue to the introduction of AJAX support, a new era beganthe WEB 2.0 consisting of XMLHttpRequest which refers to data transfer between a web server and a browser.[7] It involved much tedious work, and no single developer could know everything there is to be known, the introduction of new technology involved drastic changes in terms of designing and the concepts involved in web development. As several changes were being introduced in both the fields of Front-end and Back-end, as a result, it became difficult 6 for individuals to expertise oneself in all these fields. Thus full-stack developers are no longer present as it is very laborious, hence companies usually hire a team of specialists. Here each team member must be efficient in more than two layers of web development. The one having multiple skills are usually assigned to lead. [8] VI.CLOUD COMPUTINGIn former times there was only one option to store, manage and process the data that was via maintaining local servers or personal computers. However, due to modern advancement in computing techniques, we are now able to manipulate data over the internet. This tradition of storing, processing and managing data over the internet is called cloud computing. [9] Some of the famous companies that provide cloud computing services includeA.Advantages of Cloud ComputingCloud computing solves significant problems in business.Obtaining many perks through cloud computing is becoming the new normal. [10] 1.You pay what you use: While using cloudcomputing services, you only pay for the servicesyou use, which makes it more cost-efficient2.Flexibility: As your business progresses the scaleof the data to be handled increase or decreasescloud services provide to change your cloudcapacity at anytime.3.Backups/data recovery: For small scale businessesit is difficult to set up a data recovery systems butcloud computing provides data recovery optionwhich avoids a substantial investment.4.Mobile Connect: One of the essential features ofcloud computing is you can work from anywhere.5.Security: When it comes to data, security alwayscomes under consideration as every user wantstheir data to be secure. The cloud service providersprovide the security of data, and the data in thecloud is more secure compared to storing the datain hard drives because loss of sensitive data forsmall scale business having insufficient funds tosecure data from hackers and breaches would bedisastrous.6.Website management: Cloud computing featuresinclude data management and analytics. It givesyou the ability to manage DNS servers, webservices etc. [11]B.Cloud Service Models1.Software as a service (SaaS): In SaaS, cloudproviders manage the infrastructures and platformsthat run the cloud. There is no necessity to install thesoftware in the user’s system as the cloud provideseverything. As the software is not running on theuser’s system there is no need to invest in hardwarereducing the cost.2.Platform as a service (PaaS): Here the user has controlover applications and configuration settings for theapplication environment including network, servers,OS and storage.3.Infrastructure as a service (IaaS): IaaS refers to anonline service which provides high-level API. It alsooffers containerization which gives higherperformance than virtualization as there is no hypervisor involved in it. The capacity of containers auto-scales dynamically making you pay only for what youuse. It also provides additional resources likefirewalls, object storage, IP addresses, VLANs etc.C.The advancement of Web development due to cloudThe development of technology allowed us to meet the user'sneeds better, and thus we turned to the cloud. ?Due to an increase in the number of concurrentusers, load balancers were developed, the distribute application traffic amongst servers to prevent crashing. [12] ?Physical servers were switched to cloud-basedservers which provided much more flexibility, on-the-go payment approach, zero maintenance etc.Before we talk about cloud-based servers, one mustunderstand cloud computing which is theavailability of computer resources, both hardwareand software on demand.?The application developed was now to be reachedto a global scale for better profits, and this wasmade possible via data centers in several regions.However, now with the cloud, this is far easier asyou do not have to set up your centers.?Schema’s and Joins were not that adequate. Hence,key-value stores were used which are virtuallydatabases consisting of an array of keys, eachrepresenting one value these are similar todictionaries found in Python programminglanguage.?In order to improve quality regression, test suiteswere developed which check if the application isstill functioning after new changes have beenapplied to it. Regression test suites have become anecessity. [13]D.Some Cloud Services that led to optimization1.REST APIsAPIs: It provides rules as to how programs shouldinteract. REST: It is generally considered as a type of software architecture consisting of a set of rules to be followed when developing an API. The primary purpose is to get a response from a specific destination when a request is made. When a URL is entered, we request for that page to appear. If the request is apt, we get the GUI as the response. A Request is a complex process which occurs within short amounts of time, and are also calculated in the form of Performance Problems. It consists of four parts. a.Endpoint - It is the route through which youget a response. Starting with the rootendpoint, which is the beginning of theURL, which points to the index and the pathof the URL determines the responserequired. In the URL path, if there is a colonpresent, it refers to a variable that is to bechanged accordingly. The final part of anendpoint is Query parameters which usuallybegin with a question mark and are writtenusing SQL. Each parameter is separate bybecause spaces are invalid in an URL. UsingQuery Parameters SQL Injections are alsoperformed. Although Query Parameters aretechnically not related to APIs, it is worthmentioning. In order to test endpointscommand-line utilities are used there areseveral of them available, but the mostcommon when coming to APIs is cURL.Using endpoints repositories can be accessed easily. Repositories consist of packages. JSON is a scripting language which is used to send and request data using a REST API. b.Method - The method defines a type andgives meaning to the request there are fivedifferent types of methods the most commonbeing POST. They perform operations likecreate, read, update and delete.i.Get - It returns the requestedinformation as in ’read’, it is alsothe default method.ii.Post - It creates a new entry as in’create’.iii.Put - It updates an existing entry asin ’update’.iv.Delete - It deletes an existing entryas in ’delete’.c.Headers - These are separated by a colon andtell where to find the JSON file. They areusually used in commands for the commandline.d.Data - It consists of information to beretrieved from the server. [14]As the user’s demand and interests peaked the UI began to develop, the interaction was improved to make it more user friendly, in order to achieve this specialized people in the respective fields were hired. Later mobile application versions were introduced for further convenience of the users. Several developments were made to the programming languages itself. a.HTML - Semantic web was added, whichallowed the internet data to be machine-readable.[15] Service Workers were added,which helped in developing web applicationsoffline.[16]b.CSS - It was updated to add transitions,animations and other features to improveinteractivity.c.JavaScript - Various features like modularization, object-oriented classes, asynchronous functions and interoperability were added. d.HTTP - Better caching, security measures andtenacious sessions.2.DevOpsDevOps is a process that is an amalgamation of 2main processes which are software development (Dev) and technology operations (Ops). The main aim of the DevOps cycle is to shorten the software development life cycle while providing continuous delivery where the teams work in short intervals which ensures the software is being developed reliably in a way the delivery happens in a very smooth process. Another advantage of the DevOps cycle is the fact that it also maintains high software quality throughout the development cycle, which is evaluated on two parameters. The first parameter is the software’s functional quality which checks if the functional requirements which were defined initially have been followed or not. The next parameter is the software’s structural quality which verifies if the non-functional requirements, which support the functional requirements, have been met or not. The DevOps operation has the following functionality modes or the more accurate term being “toolchains”. The toolchains have been listed below. a.Coding - it involves code development andreview of the code.b.Building - it involves continuousintegration with tools provided by theproject.c.Testing - it involves continuous testing ofthe project.d.Packaging - it involves application and pre-deployment procedures.e.Releasing - it involves application releaseautomation.f.Configuring - it involves infrastructure ascode tools.g.Monitoring - it involves discerning thechanges at the application for the end usersThe most important parts of the DevOps toolchains are “continuous integration” and “infrastructure as a code” which occurs in the building and the configuration part of the code respectively. [17] 3.NoSQLNoSQL, also known as Not only SQL, is a cloudservice that provides scalable storage, and data is stored in the form of non-relational databases. This service has replaced the primitive system of RDBMS wherein SQL queries were required to access the data, and this data was stored in a structured tabular form consisting of rows and columns. NoSQL varies in multiple aspects when compared to the traditional database management system in terms of performance, consistency, speed, ease of use, availability, flexibility, cost, etc. [18] Some of the Famous NoSQL databases include MongoDB, Amazon DynamoDB, Redis, CouchDB, etc. 4.Cloud OrchestrationCloud orchestration is a service that is responsible formanaging the interconnections among workloads on the cloud infrastructure. It combines automated tasks into a cohesive workflow to accomplish a goal, with permissions omission and policy enforcement. Cloud orchestration procures, deploys, and starts servers, it acquires and assigns storage capacity manages networking and can also be used to create virtual machines. [19] 5.CI/CDCloud Integration is a collection of tools andtechnologies that connects different system and environments. It deals with exchanging and processing data in real-time. Continuous Delivery and Continuous Deployment are both uses for deployment where Continuous Delivery is manual and Continuous Development is automated.VII.CONCLUSIONBy incorporating all the parts, we can interpret what full stack was, how it has evolved and why has it evolved. The efficiency of workers can also be calculated and the approximation of time taken to complete a project, and finally people either see Full Sack Development to be dead or overrun. However, it can be seen from the pretext that it has been evolved and has been drastically optimized to meet the user’s needs.